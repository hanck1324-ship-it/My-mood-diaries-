아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @02-wireframe.mdc
            - @03-ui.mdc

==============================================

조건-피그마) 활용할MCP: CursorTalkToFigmaMCP(채널명: 38isn1fc)
조건-피그마) 구현될 컴포넌트 노드ID(main 영역): 3:1575

조건-파일경로) 구현될 CSS 파일경로: src/commons/components/diaries/styles.module.css

==============================================

조건-공통목록) 사용할 색상 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

조건-공통목록) 사용할 타이포그래피 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

==============================================

기존히스토리-참고만) MCP를 연동하여 피그마의 디자인을 이미 만들어져있는 와이어프레임의 main 영역에 그대로 구현할 것.

==============================================

핵심요구사항) styes_cardImage의 border-radius를 16px 16px 16px 16px 로 통일할 것.

핵심요구사항) styles_cardContent의 height를 제거할 것.

핵심요구사항) styles_diaryCard의 box-shadow 제거할 것.
핵심요구사항) 일기카드 감정 이미지가 footer 넘지 말고 main 영역에 맞출 것.
핵심요구사항) 일기카드는 아래의 조건으로 Mock 데이터를 만들어 적용할 것.

            1. 일기카드는 감정과 관련된 내용으로 enum 타입을 활용할 것.
                - 경로: commons/constants/enum.ts
                - 조건: enum.ts의 원본은 수정하지 말 것.
            
            2. 아래의 지시를 반영하여 구현할 것.
                - 날짜: 피그마와 동일하게 구현할 것.
                - 내용: 피그마와 동일하게 구현할 것. 사진의 배열이 다른 영역을 넘을 시 일기카드 수나 사이즈를 조절할 것.
                - 사진: emotion enum 타입에 지정된 이미지경로(/images) 사용할 것.
                - 감정텍스트: emotion enum 타입에 지정된 감정텍스트. "행복해요", "슬퍼요" 등 사용할 것. 텍스트가 너무 길면 넘어가는 텍스트는 .... 로 표현.
            
            3. 구체적 디자인 지시 사항 피그마 디자인을 최대한 구현할거 
                - 일기카드에 우측 상단에 피그마 디자인에 맞게 삭제 버튼을 만들어 놓을 것.
                -  같은 영역에 감정사진 아래의 왼쪽에는 감정텍스트 우쯕에는 작성날짜를 만들어 놓을 것 조금 갭을 놓아 사용자 경험을 높여 보고 편하게 할것. 