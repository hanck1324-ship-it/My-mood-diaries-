---
description: TypeScript 타입 안정성 규칙
globs: ["**/*.ts", "**/*.tsx"]
alwaysApply: false
---
아래의 조건 및 주의사항을 모두 적용하여 코드를 작성할 것.

==============================================

1. 타입 정의 조건
    - any 타입 사용을 금지할 것. (불가피한 경우 unknown 사용)
    - as 타입 단언은 최소화하고, 타입 가드 함수를 활용할 것.
    - 가능한 한 type을 사용하고, interface는 확장이 필요한 경우에만 사용할 것.
    - 유니온 타입과 교차 타입을 적절히 활용할 것.

2. 타입 안정성 조건
    - tsconfig.json의 strict 모드를 준수할 것.
    - 함수의 반환 타입을 명시적으로 선언할 것.
    - 제네릭을 활용하여 재사용 가능한 타입을 정의할 것.
    - 옵셔널 체이닝(?.)과 nullish coalescing(??)을 적절히 사용할 것.

3. 타입 구조화 조건
    - 공통으로 사용되는 타입은 types 디렉토리에 분리할 것.
    - 컴포넌트 Props 타입은 컴포넌트와 같은 파일에 정의할 것.
    - Enum 대신 const assertion(as const)를 우선적으로 고려할 것.

4. 런타임 타입 검증 조건
    - API 응답 등 외부 데이터는 zod를 활용하여 검증할 것.
    - 타입 가드 함수를 작성하여 런타임 안정성을 확보할 것.
